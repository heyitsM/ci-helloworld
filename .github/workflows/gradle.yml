# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI/CD with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # permissions:
  # contents: read

jobs:
  build_and_test:
    name: Build and Test
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{secrets.PUSHING_TOKEN}}
      
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Setting Permissions
        run: chmod a+x gradlew
      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: build
      - name: Test with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: test
      - name: Run Test Coverage
        run: ./gradlew jacocoTestReport
      - name: Jacoco
        uses: cicirello/jacoco-badge-generator@v2.9.0
        with:
          jacoco-csv-file: build/reports/jacoco/test/jacocoTestReport.csv
          generate-summary: true
          summary-filename: "coverage-summary.json"
          fail-on-branches-decrease: true
          fail-on-coverage-decrease: true
      - name: Save Jacoco Summary
        run: |
          if [[ $(git status --porcelain) ]]; then
            git config --global user.name 'Emily Berger'
            git config --global user.email 'heyitsM@users.noreply.github.com'
            git add '.github/badges'
            git commit -m "Autogenerated JaCoCo report"
            git push
          fi

  build_and_publish_docker_image:
    name: Publish to Docker Hub
    runs-on: ubuntu-latest
    needs: [build_and_test]
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      DOCKER_REPO: ${{ secrets.DOCKER_REPO }}
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{env.DOCKER_USERNAME}}
          password: ${{env.DOCKER_PASSWORD}}
      - name: Build Container image
        run: docker build -t ${{ env.DOCKER_REPO }}:latest .
      - name: Publish Docker image
        run: docker push ${{ env.DOCKER_REPO }}
